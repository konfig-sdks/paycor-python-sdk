# coding: utf-8
"""
    Paycor Public API

     Welcome to Paycor's Public API! This document is a reference for the APIs Paycor has available, and acts as a complement to the \"Guides\" section.   # Getting Started  <strong>To learn more about getting started with Paycor's Public APIs, check out our <a href=\"/guides\">Guides.</a></strong>  # GET, PUT, POST  * When requesting object, use GET endpoints. All list endpoints support paging, as described [in the other doc].  * When creating an object, use POST endpoints. Your code will need to create an object and send it to Paycor in your API call request body as JSON. You can use the \"request sample\" body as a starting point. Our endpoints will return a reference to the created object (the ID and GET API URL) for your system. * When updating an object, you will use PUT endpoints. The general flow would be to: GET the object you want to update, modify the fields as desired, then PUT the object (as JSON in the request body) to our endpoints. Some fields like the object's ID cannot be updated because they are system-set.'   # Error Handling  * 400: Please consult the response text to correct your request information.  * 401 with response \"Access denied due to missing subscription key\": Please include your APIM Subscription Key as header Ocp-Apim-Subscription-Key or querystring parameter subscription-key.  * 401 with no response: Please ensure you included a valid & current Access Token in the Authorization header. * 403: Please ensure your Access Token's scope has all the relevant access you need, on the AppCreator Data Access screen.  * 404: Please validate the API route you are using. If that is correct, one of your IDs most likely does not exist or is not in a valid state.  * 429: Paycor implements rate limits for our Public API. Each customer (implemented via APIM subscription key) has a limited number of calls. The number of calls is counted across all APIs, not per individual API. Please use bulk endpoints where available and spread your calls over a wider timespan.   * The default rate limit is up to 1000 API calls per minute (total across all our Public APIs).  * 500: Please contact Paycor. When you make a POST or PUT call and receive a 500, please do not retry the call automatically - this may result in double-posting. GETs can be safely retried.   # IDs  * ClientId = LegalEntityId * TenantId = CompanyId * EmployeeId is not visible in Paycor's UI, you must retrieve it from the Public API  # Earnings, Deductions, Taxes  This section describes the domain model for Paycor's Earnings, Deductions, and Taxes. This will provide background for many paydata-related Public API endpoints.   Paycor stores Earnings, Deductions, and Taxes each at three levels: * Global: Same data across all legal entities. Setup by Paycor for customers to choose from. Sample Codes (note these will not be setup on every Legal Entity):   * Earnings: REG, OT   * Taxes: FITWH, SOC, SOCER, OHCIN   * Deductions: 401k, KMat, H125, UWay * Legal Entity or Tenant: Codes setup &amp; customized on the legal entity or Tenant level. Must be tied to a Global Code.    * Perform UI allows creating Deduction and Earning codes on Tenant level (under Configure Company nav menu). These will be returned by the Legal Entity Public API endpoints.  * Employee: codes setup on a particular employee, tied to a Legal Entity-level or Tenant-level code   * Employee Earnings/Deductions/Taxes are applied during payroll. Many properties are inherited from the Legal Entity or Global levels, but some can be overridden.   # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

    Generated by: https://konfigthis.com
"""

import typing
import inspect
from datetime import date, datetime
from paycor_python_sdk.client_custom import ClientCustom
from paycor_python_sdk.configuration import Configuration
from paycor_python_sdk.api_client import ApiClient
from paycor_python_sdk.type_util import copy_signature
from paycor_python_sdk.apis.tags.legal_entity_taxes_api import LegalEntityTaxesApi
from paycor_python_sdk.apis.tags.applicant_tracking_system_api import ApplicantTrackingSystemApi
from paycor_python_sdk.apis.tags.employee_legacy_perform_time_schedules_api import EmployeeLegacyPerformTimeSchedulesApi
from paycor_python_sdk.apis.tags.employee_certifications_api import EmployeeCertificationsApi
from paycor_python_sdk.apis.tags.employee_custom_fields_api import EmployeeCustomFieldsApi
from paycor_python_sdk.apis.tags.employee_deductions_api import EmployeeDeductionsApi
from paycor_python_sdk.apis.tags.employee_direct_deposits_api import EmployeeDirectDepositsApi
from paycor_python_sdk.apis.tags.employee_documents_api import EmployeeDocumentsApi
from paycor_python_sdk.apis.tags.employee_earnings_api import EmployeeEarningsApi
from paycor_python_sdk.apis.tags.employee_emergency_contact_api import EmployeeEmergencyContactApi
from paycor_python_sdk.apis.tags.employee_i9_verification_api import EmployeeI9VerificationApi
from paycor_python_sdk.apis.tags.employee_onboarding_api import EmployeeOnboardingApi
from paycor_python_sdk.apis.tags.employee_pay_rates_api import EmployeePayRatesApi
from paycor_python_sdk.apis.tags.employee_pay_schedule_api import EmployeePayScheduleApi
from paycor_python_sdk.apis.tags.employee_pay_stubs_api import EmployeePayStubsApi
from paycor_python_sdk.apis.tags.employee_payroll_hours_api import EmployeePayrollHoursApi
from paycor_python_sdk.apis.tags.employee_taxes_api import EmployeeTaxesApi
from paycor_python_sdk.apis.tags.employee_time_card_punches_api import EmployeeTimeCardPunchesApi
from paycor_python_sdk.apis.tags.employee_time_off_accruals_api import EmployeeTimeOffAccrualsApi
from paycor_python_sdk.apis.tags.employees_api import EmployeesApi
from paycor_python_sdk.apis.tags.events_api import EventsApi
from paycor_python_sdk.apis.tags.general_ledger_api import GeneralLedgerApi
from paycor_python_sdk.apis.tags.general_ledger_job_costing_api import GeneralLedgerJobCostingApi
from paycor_python_sdk.apis.tags.job_titles_api import JobTitlesApi
from paycor_python_sdk.apis.tags.labor_categories_api import LaborCategoriesApi
from paycor_python_sdk.apis.tags.labor_codes_api import LaborCodesApi
from paycor_python_sdk.apis.tags.legal_entities_api import LegalEntitiesApi
from paycor_python_sdk.apis.tags.legal_entity_activity_types_api import LegalEntityActivityTypesApi
from paycor_python_sdk.apis.tags.legal_entity_certifications_api import LegalEntityCertificationsApi
from paycor_python_sdk.apis.tags.legal_entity_deductions_api import LegalEntityDeductionsApi
from paycor_python_sdk.apis.tags.legal_entity_departments_api import LegalEntityDepartmentsApi
from paycor_python_sdk.apis.tags.legal_entity_earnings_api import LegalEntityEarningsApi
from paycor_python_sdk.apis.tags.legal_entity_job_titles_api import LegalEntityJobTitlesApi
from paycor_python_sdk.apis.tags.legal_entity_pay_data_api import LegalEntityPayDataApi
from paycor_python_sdk.apis.tags.legal_entity_pay_groups_api import LegalEntityPayGroupsApi
from paycor_python_sdk.apis.tags.legal_entity_pay_schedule_api import LegalEntityPayScheduleApi
from paycor_python_sdk.apis.tags.legal_entity_payroll_processing_data_api import LegalEntityPayrollProcessingDataApi
from paycor_python_sdk.apis.tags.legal_entity_schedule_groups_api import LegalEntityScheduleGroupsApi
from paycor_python_sdk.apis.tags.legal_entity_services_api import LegalEntityServicesApi
from paycor_python_sdk.apis.tags.legal_entity_status_reason_api import LegalEntityStatusReasonApi
from paycor_python_sdk.apis.tags.legal_entity_time_data_api import LegalEntityTimeDataApi
from paycor_python_sdk.apis.tags.legal_entity_time_off_types_api import LegalEntityTimeOffTypesApi
from paycor_python_sdk.apis.tags.legal_entity_work_locations_api import LegalEntityWorkLocationsApi
from paycor_python_sdk.apis.tags.legal_entity_work_sites_api import LegalEntityWorkSitesApi
from paycor_python_sdk.apis.tags.persons_api import PersonsApi
from paycor_python_sdk.apis.tags.tenants_api import TenantsApi
from paycor_python_sdk.apis.tags.time_off_requests_api import TimeOffRequestsApi



class Paycor(ClientCustom):

    def __init__(self, configuration: typing.Union[Configuration, None] = None, **kwargs):
        super().__init__(configuration, **kwargs)
        if (len(kwargs) > 0):
            configuration = Configuration(**kwargs)
        if (configuration is None):
            raise Exception("configuration is required")
        api_client = ApiClient(configuration)
        self._legal_entity_taxes: LegalEntityTaxesApi = LegalEntityTaxesApi(api_client)
        self.applicant_tracking_system: ApplicantTrackingSystemApi = ApplicantTrackingSystemApi(api_client)
        self.employee_(legacy_/_perform_time)_schedules: EmployeeLegacyPerformTimeSchedulesApi = EmployeeLegacyPerformTimeSchedulesApi(api_client)
        self.employee_certifications: EmployeeCertificationsApi = EmployeeCertificationsApi(api_client)
        self.employee_custom_fields: EmployeeCustomFieldsApi = EmployeeCustomFieldsApi(api_client)
        self.employee_deductions: EmployeeDeductionsApi = EmployeeDeductionsApi(api_client)
        self.employee_direct_deposits: EmployeeDirectDepositsApi = EmployeeDirectDepositsApi(api_client)
        self.employee_documents: EmployeeDocumentsApi = EmployeeDocumentsApi(api_client)
        self.employee_earnings: EmployeeEarningsApi = EmployeeEarningsApi(api_client)
        self.employee_emergency_contact: EmployeeEmergencyContactApi = EmployeeEmergencyContactApi(api_client)
        self.employee_i9_verification: EmployeeI9VerificationApi = EmployeeI9VerificationApi(api_client)
        self.employee_onboarding: EmployeeOnboardingApi = EmployeeOnboardingApi(api_client)
        self.employee_pay_rates: EmployeePayRatesApi = EmployeePayRatesApi(api_client)
        self.employee_pay_schedule: EmployeePayScheduleApi = EmployeePayScheduleApi(api_client)
        self.employee_pay_stubs: EmployeePayStubsApi = EmployeePayStubsApi(api_client)
        self.employee_payroll_hours: EmployeePayrollHoursApi = EmployeePayrollHoursApi(api_client)
        self.employee_taxes: EmployeeTaxesApi = EmployeeTaxesApi(api_client)
        self.employee_time_card_punches: EmployeeTimeCardPunchesApi = EmployeeTimeCardPunchesApi(api_client)
        self.employee_time_off_accruals: EmployeeTimeOffAccrualsApi = EmployeeTimeOffAccrualsApi(api_client)
        self.employees: EmployeesApi = EmployeesApi(api_client)
        self.events: EventsApi = EventsApi(api_client)
        self.general_ledger: GeneralLedgerApi = GeneralLedgerApi(api_client)
        self.general_ledger_job_costing: GeneralLedgerJobCostingApi = GeneralLedgerJobCostingApi(api_client)
        self.job_titles: JobTitlesApi = JobTitlesApi(api_client)
        self.labor_categories: LaborCategoriesApi = LaborCategoriesApi(api_client)
        self.labor_codes: LaborCodesApi = LaborCodesApi(api_client)
        self.legal_entities: LegalEntitiesApi = LegalEntitiesApi(api_client)
        self.legal_entity_activity_types: LegalEntityActivityTypesApi = LegalEntityActivityTypesApi(api_client)
        self.legal_entity_certifications: LegalEntityCertificationsApi = LegalEntityCertificationsApi(api_client)
        self.legal_entity_deductions: LegalEntityDeductionsApi = LegalEntityDeductionsApi(api_client)
        self.legal_entity_departments: LegalEntityDepartmentsApi = LegalEntityDepartmentsApi(api_client)
        self.legal_entity_earnings: LegalEntityEarningsApi = LegalEntityEarningsApi(api_client)
        self.legal_entity_job_titles: LegalEntityJobTitlesApi = LegalEntityJobTitlesApi(api_client)
        self.legal_entity_pay_data: LegalEntityPayDataApi = LegalEntityPayDataApi(api_client)
        self.legal_entity_pay_groups: LegalEntityPayGroupsApi = LegalEntityPayGroupsApi(api_client)
        self.legal_entity_pay_schedule: LegalEntityPayScheduleApi = LegalEntityPayScheduleApi(api_client)
        self.legal_entity_payroll_processing_data: LegalEntityPayrollProcessingDataApi = LegalEntityPayrollProcessingDataApi(api_client)
        self.legal_entity_schedule_groups: LegalEntityScheduleGroupsApi = LegalEntityScheduleGroupsApi(api_client)
        self.legal_entity_services: LegalEntityServicesApi = LegalEntityServicesApi(api_client)
        self.legal_entity_status_reason: LegalEntityStatusReasonApi = LegalEntityStatusReasonApi(api_client)
        self.legal_entity_time_data: LegalEntityTimeDataApi = LegalEntityTimeDataApi(api_client)
        self.legal_entity_time_off_types: LegalEntityTimeOffTypesApi = LegalEntityTimeOffTypesApi(api_client)
        self.legal_entity_work_locations: LegalEntityWorkLocationsApi = LegalEntityWorkLocationsApi(api_client)
        self.legal_entity_work_sites: LegalEntityWorkSitesApi = LegalEntityWorkSitesApi(api_client)
        self.persons: PersonsApi = PersonsApi(api_client)
        self.tenants: TenantsApi = TenantsApi(api_client)
        self.time_off_requests: TimeOffRequestsApi = TimeOffRequestsApi(api_client)
